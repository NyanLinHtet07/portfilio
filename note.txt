"use client";
import {
  useMotionValueEvent,
  useScroll,
  useTransform,
  motion,
} from "framer-motion";
import React, { useEffect, useRef, useState } from "react";

interface TimelineEntry {
  title: string;
  content: React.ReactNode;
  position: string; // "left" or "right"
}

export const Timeline = ({ data }: { data: TimelineEntry[] }) => {
  const ref = useRef<HTMLDivElement>(null);
  const containerRef = useRef<HTMLDivElement>(null);
  const [height, setHeight] = useState(0);

  useEffect(() => {
    if (ref.current) {
      const rect = ref.current.getBoundingClientRect();
      setHeight(rect.height);
    }
  }, [ref]);

  const { scrollYProgress } = useScroll({
    target: containerRef,
    offset: ["start 10%", "end 50%"],
  });

  const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height]);
  const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1]);

  return (
    <div className="w-full bg-black text-white font-sans md:px-10" ref={containerRef}>
      <div className="max-w-7xl mx-auto py-20 px-4 md:px-8 lg:px-10">
        <h2 className="text-lg md:text-4xl mb-4 max-w-4xl">
          DISTINGUISHED PROFESSIONAL JOURNEY
        </h2>
      </div>

      <div ref={ref} className="relative w-full md:w-3/6 mx-auto pb-20 bg-black text-white">
        {data.map((item, index) => (
          <div key={index} className="relative flex w-full text-white pt-10 md:pt-40">
            {/* Content Box */}
            <div
              className={`absolute top-0 ${
                item.position === "left" ? "right-1/2 pr-10 text-right" : "left-1/2 pl-10 text-left"
              }`}
              style={{ width: "calc(50% - 20px)" }}
            >
              <h3 className="text-2xl md:text-4xl font-bold">{item.title}</h3>
              <div>{item.content}</div>
            </div>
          </div>
        ))}
        {/* Vertical Line */}
        <div
          style={{
            height: height + "px",
          }}
          className="absolute left-1/2 transform -translate-x-1/2 top-44 w-[2px] bg-gradient-to-b from-purple-500 via-blue-500 to-transparent"
        >
          <motion.div
            style={{
              height: heightTransform,
              opacity: opacityTransform,
            }}
            className="absolute inset-0 bg-gradient-to-b from-purple-500 via-blue-500 to-transparent rounded-full"
          />
        </div>
      </div>
    </div>
  );
};
